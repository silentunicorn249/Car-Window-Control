Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    main.o(.ARM.exidx.text.Button_Pressed) refers to main.o(.text.Button_Pressed) for [Anonymous Symbol]
    main.o(.text.MotorDriver) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.MotorDriver) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.MotorDriver) refers to main.o(.bss.lastDirection) for lastDirection
    main.o(.ARM.exidx.text.MotorDriver) refers to main.o(.text.MotorDriver) for [Anonymous Symbol]
    main.o(.text.PassengerListner) refers to main.o(.text.Button_Pressed) for Button_Pressed
    main.o(.text.PassengerListner) refers to main.o(.text.timer0_Delay) for timer0_Delay
    main.o(.text.PassengerListner) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.PassengerListner) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.PassengerListner) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.PassengerListner) refers to main.o(.text.PassengerListner) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.timer0_Delay) refers to main.o(.text.timer0_Delay) for [Anonymous Symbol]
    main.o(.text.DriverListner) refers to main.o(.text.Button_Pressed) for Button_Pressed
    main.o(.text.DriverListner) refers to main.o(.text.timer0_Delay) for timer0_Delay
    main.o(.text.DriverListner) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.DriverListner) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.DriverListner) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.DriverListner) refers to main.o(.text.DriverListner) for [Anonymous Symbol]
    main.o(.text.LimitSwitchListner) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.LimitSwitchListner) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.LimitSwitchListner) refers to main.o(.text.LimitSwitchListner) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.psh_btn_init) refers to main.o(.text.psh_btn_init) for [Anonymous Symbol]
    main.o(.text.Init) refers to main.o(.text.psh_btn_init) for psh_btn_init
    main.o(.text.Init) refers to main.o(.text.timer0Init) for timer0Init
    main.o(.ARM.exidx.text.Init) refers to main.o(.text.Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.timer0Init) refers to main.o(.text.timer0Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.timerCallback) refers to main.o(.text.timerCallback) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.Init) for Init
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.main) refers to main.o(.text.PassengerListner) for PassengerListner
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.MotorDriver) for MotorDriver
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_1.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Button_Pressed), (8 bytes).
    Removing main.o(.ARM.exidx.text.MotorDriver), (8 bytes).
    Removing main.o(.ARM.exidx.text.PassengerListner), (8 bytes).
    Removing main.o(.ARM.exidx.text.timer0_Delay), (8 bytes).
    Removing main.o(.text.DriverListner), (132 bytes).
    Removing main.o(.ARM.exidx.text.DriverListner), (8 bytes).
    Removing main.o(.text.LimitSwitchListner), (110 bytes).
    Removing main.o(.ARM.exidx.text.LimitSwitchListner), (8 bytes).
    Removing main.o(.ARM.exidx.text.psh_btn_init), (8 bytes).
    Removing main.o(.ARM.exidx.text.Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.timer0Init), (8 bytes).
    Removing main.o(.text.timerCallback), (24 bytes).
    Removing main.o(.ARM.exidx.text.timerCallback), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.bss.buttonPressed), (1 bytes).
    Removing main.o(.bss.buttonPressStartTime), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (132 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (74 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (528 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (444 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (386 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (38 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (318 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (340 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (278 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (378 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (270 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (362 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (348 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (386 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (558 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (110 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (176 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (52 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (44 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (90 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (78 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (44 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (76 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (94 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

282 unused section(s) (total 15575 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       92  __scatter.o(!!!scatter)
    !!handler_copy                           0x000002d0   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x000002ec   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x000002f0   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0000030c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0000030e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x00000312   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x00000312   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000314   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x00000316   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x00000316   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x00000316   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x00000316   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x00000316   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x00000316   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x00000316   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x00000318   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x00000318   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x00000318   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0000031e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0000031e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000322   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000322   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000032a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0000032c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0000032c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000330   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x00000338   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000338   Section      276  startup_tm4c123.o(.text)
    .text                                    0x0000044c   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004d6   Section       16  aeabi_memset4.o(.text)
    .text                                    0x000004e6   Section       68  rt_memclr.o(.text)
    .text                                    0x0000052a   Section        0  heapauxi.o(.text)
    .text                                    0x00000530   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000594   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005e2   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0000062c   Section        0  exit.o(.text)
    .text                                    0x00000640   Section        8  libspace.o(.text)
    .text                                    0x00000648   Section        0  sys_exit.o(.text)
    .text                                    0x00000654   Section        2  use_no_semi.o(.text)
    .text                                    0x00000656   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x00000658   Section        0  main.o(.text.Button_Pressed)
    [Anonymous Symbol]                       0x00000668   Section        0  main.o(.text.Init)
    [Anonymous Symbol]                       0x00000674   Section        0  main.o(.text.MotorDriver)
    [Anonymous Symbol]                       0x00000754   Section        0  main.o(.text.PassengerListner)
    [Anonymous Symbol]                       0x000007c0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000820   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000830   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000850   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000854   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000890   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0000099c   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x00000a1c   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00000a89   Thumb Code   290  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00000a88   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00000bad   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00000bac   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00000d01   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00000d00   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00000d6d   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00000d6c   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00000dc9   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00000dc8   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00000e0d   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00000e0c   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00000ed9   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00000ed8   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetExpectedIdleTime                   0x00000ef1   Thumb Code   124  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x00000ef0   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvGetNextExpireTime                     0x00000f6d   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00000f6c   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvIdleTask                              0x00000fad   Thumb Code   154  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00000fac   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x00001049   Thumb Code    78  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x00001048   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00001099   Thumb Code   292  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00001098   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x000011bd   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x000011bc   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x0000124d   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x0000124c   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x000012d5   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x000012d4   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x000012fd   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x000012fc   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x0000132d   Thumb Code   236  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x0000132c   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00001419   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001418   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00001441   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00001440   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00001495   Thumb Code   384  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00001494   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00001615   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00001614   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x000016b1   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x000016b0   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x000016e5   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000016e4   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00001721   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00001720   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00001765   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00001764   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x000017b9   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x000017b8   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00001805   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001804   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00001825   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001824   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x000018f0   Section        0  main.o(.text.psh_btn_init)
    [Anonymous Symbol]                       0x00001954   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001a14   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00001a74   Section        0  main.o(.text.timer0Init)
    [Anonymous Symbol]                       0x00001aa8   Section        0  main.o(.text.timer0_Delay)
    [Anonymous Symbol]                       0x00001af0   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001b38   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x00001b44   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00001b74   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00001b84   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x00001bf1   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00001bf0   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00001c04   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00001c5c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00001ca8   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00001ccc   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00001d44   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00001f64   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00001fc8   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00002038   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x0000205c   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x0000206c   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x000020b0   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x0000212c   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x000021e0   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x000022ac   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x000022bc   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000022bc   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0000237c   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x000024d4   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002570   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00002678   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x000028ec   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00002ac8   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00002bc4   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00002c64   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00002c9c   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00002cb0   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00002f10   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00003048   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x000031dc   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00003400   Section        0  timers.o(.text.xTimerCreateTimerTask)
    $v0                                      0x0000346c   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x0000346c   Section       26  fpinit.o(x$fpl$fpinit)
    .L.str                                   0x00003486   Data          11  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003486   Section        0  main.o(.rodata.str1.1)
    .L.str.1                                 0x00003491   Data           6  main.o(.rodata.str1.1)
    .L.str                                   0x00003497   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003497   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x0000349c   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000349c   Section        0  timers.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x2000006c   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x2000006c   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.pucAlignedHeap              0x20000070   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x20000070   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    __tagsym$$used.1                         0x20000074   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000078   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000078   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x2000007c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000007c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x20000080   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000080   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000084   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000084   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000088   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000088   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200000ec   Data        8192  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200000ec   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x200020ec   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x200020ec   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x200020f0   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x200020f0   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x200020f4   Data           4  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x200020f4   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x200020f8   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x200020f8   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x200020fc   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200020fc   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002100   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002100   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002104   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002104   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002108   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002108   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x2000210c   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x2000210c   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002110   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002110   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002124   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002124   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002138   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002138   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x2000214c   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x2000214c   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x20002160   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002160   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x20002164   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x20002164   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xNextFreeByte                            0x20002168   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x20002168   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x2000216c   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x2000216c   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002170   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002170   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x20002174   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002174   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002178   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002178   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002190   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002190   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x20002194   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002194   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x200021a8   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x200021a8   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x200021bc   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x200021bc   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x200021c0   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x200021c0   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x200021c4   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x200021c4   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x200021c8   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x200021c8   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x200021d0   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x200021d0   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x200021d0   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x200021d0   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x200023d0   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    84  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x0000027f   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x000002d1   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x000002ed   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x000002f1   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0000030d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0000030f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x00000313   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000315   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x00000317   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x00000317   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x00000317   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x00000317   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x00000317   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x00000317   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x00000317   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x00000319   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x00000319   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x00000319   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0000031f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0000031f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000323   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000323   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000032b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0000032d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0000032d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000331   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x00000339   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000041f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000421   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x00000423   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000425   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000427   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000429   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x0000042d   Thumb Code     0  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x0000044d   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0000044d   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x000004b3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000004d7   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004d7   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x000004e7   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x000004e7   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x000004eb   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x0000052b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0000052d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000052f   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x00000531   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000531   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000531   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000579   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x00000595   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x00000595   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x00000595   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x00000599   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x000005e3   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0000062d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x00000641   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x00000641   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x00000641   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000649   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000655   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000655   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x00000657   Thumb Code     0  indicate_semi.o(.text)
    Button_Pressed                           0x00000659   Thumb Code    16  main.o(.text.Button_Pressed)
    Init                                     0x00000669   Thumb Code    12  main.o(.text.Init)
    MotorDriver                              0x00000675   Thumb Code   222  main.o(.text.MotorDriver)
    PassengerListner                         0x00000755   Thumb Code   108  main.o(.text.PassengerListner)
    PendSV_Handler                           0x000007c1   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000831   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000855   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000891   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    eTaskConfirmSleepModeStatus              0x0000099d   Thumb Code   128  tasks.o(.text.eTaskConfirmSleepModeStatus)
    main                                     0x00000a1d   Thumb Code   108  main.o(.text.main)
    psh_btn_init                             0x000018f1   Thumb Code    98  main.o(.text.psh_btn_init)
    pvPortMalloc                             0x00001955   Thumb Code   192  heap_1.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x00001a15   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    timer0Init                               0x00001a75   Thumb Code    50  main.o(.text.timer0Init)
    timer0_Delay                             0x00001aa9   Thumb Code    72  main.o(.text.timer0_Delay)
    uxListRemove                             0x00001af1   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x00001b39   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vListInitialise                          0x00001b45   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00001b75   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00001b85   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x00001c05   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00001c5d   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x00001ca9   Thumb Code    36  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00001ccd   Thumb Code   120  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00001d45   Thumb Code   544  port.o(.text.vPortSuppressTicksAndSleep)
    vQueueWaitForMessageRestricted           0x00001f65   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00001fc9   Thumb Code   110  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00002039   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x0000205d   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x0000206d   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x000020b1   Thumb Code   124  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x0000212d   Thumb Code   180  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x000021e1   Thumb Code   204  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x000022ad   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x000022bd   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x0000237d   Thumb Code   342  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x000024d5   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00002571   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00002679   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x000028ed   Thumb Code   476  queue.o(.text.xQueueReceive)
    xTaskCheckForTimeOut                     0x00002ac9   Thumb Code   252  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00002bc5   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00002c65   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00002c9d   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00002cb1   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00002f11   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x00003049   Thumb Code   402  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x000031dd   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00003401   Thumb Code   108  timers.o(.text.xTimerCreateTimerTask)
    _fp_init                                 0x0000346d   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00003485   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00003485   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x000034a4   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x000034a8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000034c8   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    lastDirection                            0x20000068   Data           2  main.o(.bss.lastDirection)
    pxCurrentTCB                             0x20000074   Data           4  tasks.o(.bss.pxCurrentTCB)
    xQueue                                   0x2000218c   Data           4  main.o(.bss.xQueue)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000339

  Load Region LR_1 (Base: 0x00000000, Size: 0x000034d0, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000034c8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO           38    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO          474  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x0000005c   Code   RO          643    !!!scatter          c_w.l(__scatter.o)
    0x000002d0   0x000002d0   0x0000001a   Code   RO          647    !!handler_copy      c_w.l(__scatter_copy.o)
    0x000002ea   0x000002ea   0x00000002   PAD
    0x000002ec   0x000002ec   0x00000002   Code   RO          644    !!handler_null      c_w.l(__scatter.o)
    0x000002ee   0x000002ee   0x00000002   PAD
    0x000002f0   0x000002f0   0x0000001c   Code   RO          649    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0000030c   0x0000030c   0x00000002   Code   RO          505    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0000030e   0x0000030e   0x00000004   Code   RO          511    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          514    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          516    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          519    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          521    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          523    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          526    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          528    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          530    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          532    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          534    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          536    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          538    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          540    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          542    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          544    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          546    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          550    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          552    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          554    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000000   Code   RO          556    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x00000312   0x00000312   0x00000002   Code   RO          557    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x00000314   0x00000314   0x00000002   Code   RO          579    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x00000316   0x00000316   0x00000000   Code   RO          594    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x00000316   0x00000316   0x00000000   Code   RO          596    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x00000316   0x00000316   0x00000000   Code   RO          599    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x00000316   0x00000316   0x00000000   Code   RO          602    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x00000316   0x00000316   0x00000000   Code   RO          604    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x00000316   0x00000316   0x00000000   Code   RO          607    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x00000316   0x00000316   0x00000002   Code   RO          608    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x00000318   0x00000318   0x00000000   Code   RO          476    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x00000318   0x00000318   0x00000000   Code   RO          482    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x00000318   0x00000318   0x00000006   Code   RO          494    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0000031e   0x0000031e   0x00000000   Code   RO          484    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x0000031e   0x0000031e   0x00000004   Code   RO          485    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000322   0x00000322   0x00000000   Code   RO          487    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000322   0x00000322   0x00000008   Code   RO          488    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000032a   0x0000032a   0x00000002   Code   RO          509    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0000032c   0x0000032c   0x00000000   Code   RO          559    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0000032c   0x0000032c   0x00000004   Code   RO          560    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000330   0x00000330   0x00000006   Code   RO          561    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x00000336   0x00000336   0x00000002   PAD
    0x00000338   0x00000338   0x00000114   Code   RO           39  * .text               startup_tm4c123.o
    0x0000044c   0x0000044c   0x0000008a   Code   RO          466    .text               c_w.l(rt_memcpy_v6.o)
    0x000004d6   0x000004d6   0x00000010   Code   RO          468    .text               c_w.l(aeabi_memset4.o)
    0x000004e6   0x000004e6   0x00000044   Code   RO          470    .text               c_w.l(rt_memclr.o)
    0x0000052a   0x0000052a   0x00000006   Code   RO          472    .text               c_w.l(heapauxi.o)
    0x00000530   0x00000530   0x00000064   Code   RO          477    .text               c_w.l(rt_memcpy_w.o)
    0x00000594   0x00000594   0x0000004e   Code   RO          479    .text               c_w.l(rt_memclr_w.o)
    0x000005e2   0x000005e2   0x0000004a   Code   RO          496    .text               c_w.l(sys_stackheap_outer.o)
    0x0000062c   0x0000062c   0x00000012   Code   RO          498    .text               c_w.l(exit.o)
    0x0000063e   0x0000063e   0x00000002   PAD
    0x00000640   0x00000640   0x00000008   Code   RO          506    .text               c_w.l(libspace.o)
    0x00000648   0x00000648   0x0000000c   Code   RO          569    .text               c_w.l(sys_exit.o)
    0x00000654   0x00000654   0x00000002   Code   RO          584    .text               c_w.l(use_no_semi.o)
    0x00000656   0x00000656   0x00000000   Code   RO          586    .text               c_w.l(indicate_semi.o)
    0x00000656   0x00000656   0x00000002   PAD
    0x00000658   0x00000658   0x00000010   Code   RO            2    .text.Button_Pressed  main.o
    0x00000668   0x00000668   0x0000000c   Code   RO           16    .text.Init          main.o
    0x00000674   0x00000674   0x000000de   Code   RO            4    .text.MotorDriver   main.o
    0x00000752   0x00000752   0x00000002   PAD
    0x00000754   0x00000754   0x0000006c   Code   RO            6    .text.PassengerListner  main.o
    0x000007c0   0x000007c0   0x00000064   Code   RO           98    .text.PendSV_Handler  port.o
    0x00000824   0x00000824   0x0000000c   PAD
    0x00000830   0x00000830   0x00000024   Code   RO           82    .text.SVC_Handler   port.o
    0x00000854   0x00000854   0x0000003c   Code   RO          100    .text.SysTick_Handler  port.o
    0x00000890   0x00000890   0x0000010c   Code   RO           50    .text.SystemInit    system_tm4c123.o
    0x0000099c   0x0000099c   0x00000080   Code   RO          318    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x00000a1c   0x00000a1c   0x0000006c   Code   RO           22    .text.main          main.o
    0x00000a88   0x00000a88   0x00000122   Code   RO          240    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000baa   0x00000baa   0x00000002   PAD
    0x00000bac   0x00000bac   0x00000154   Code   RO          228    .text.prvAddNewTaskToReadyList  tasks.o
    0x00000d00   0x00000d00   0x0000006a   Code   RO          394    .text.prvCheckForValidListAndQueue  timers.o
    0x00000d6a   0x00000d6a   0x00000002   PAD
    0x00000d6c   0x00000d6c   0x0000005a   Code   RO          358    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00000dc6   0x00000dc6   0x00000002   PAD
    0x00000dc8   0x00000dc8   0x00000042   Code   RO          175    .text.prvCopyDataFromQueue  queue.o
    0x00000e0a   0x00000e0a   0x00000002   PAD
    0x00000e0c   0x00000e0c   0x000000cc   Code   RO          161    .text.prvCopyDataToQueue  queue.o
    0x00000ed8   0x00000ed8   0x00000018   Code   RO          234    .text.prvDeleteTCB  tasks.o
    0x00000ef0   0x00000ef0   0x0000007c   Code   RO          360    .text.prvGetExpectedIdleTime  tasks.o
    0x00000f6c   0x00000f6c   0x00000040   Code   RO          432    .text.prvGetNextExpireTime  timers.o
    0x00000fac   0x00000fac   0x0000009a   Code   RO          266    .text.prvIdleTask   tasks.o
    0x00001046   0x00001046   0x00000002   PAD
    0x00001048   0x00001048   0x0000004e   Code   RO          141    .text.prvInitialiseNewQueue  queue.o
    0x00001096   0x00001096   0x00000002   PAD
    0x00001098   0x00001098   0x00000124   Code   RO          226    .text.prvInitialiseNewTask  tasks.o
    0x000011bc   0x000011bc   0x0000008e   Code   RO          356    .text.prvInitialiseTaskLists  tasks.o
    0x0000124a   0x0000124a   0x00000002   PAD
    0x0000124c   0x0000124c   0x00000086   Code   RO          446    .text.prvInsertTimerInActiveList  timers.o
    0x000012d2   0x000012d2   0x00000002   PAD
    0x000012d4   0x000012d4   0x00000028   Code   RO          177    .text.prvIsQueueEmpty  queue.o
    0x000012fc   0x000012fc   0x0000002e   Code   RO          165    .text.prvIsQueueFull  queue.o
    0x0000132a   0x0000132a   0x00000002   PAD
    0x0000132c   0x0000132c   0x000000ec   Code   RO          163    .text.prvNotifyQueueSetContainer  queue.o
    0x00001418   0x00001418   0x00000028   Code   RO           90    .text.prvPortStartFirstTask  port.o
    0x00001440   0x00001440   0x00000054   Code   RO          440    .text.prvProcessExpiredTimer  timers.o
    0x00001494   0x00001494   0x00000180   Code   RO          436    .text.prvProcessReceivedCommands  timers.o
    0x00001614   0x00001614   0x0000009a   Code   RO          434    .text.prvProcessTimerOrBlockTask  timers.o
    0x000016ae   0x000016ae   0x00000002   PAD
    0x000016b0   0x000016b0   0x00000034   Code   RO          444    .text.prvReloadTimer  timers.o
    0x000016e4   0x000016e4   0x0000003c   Code   RO          232    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00001720   0x00001720   0x00000044   Code   RO          438    .text.prvSampleTimeNow  timers.o
    0x00001764   0x00001764   0x00000052   Code   RO          442    .text.prvSwitchTimerLists  timers.o
    0x000017b6   0x000017b6   0x00000002   PAD
    0x000017b8   0x000017b8   0x0000004c   Code   RO           80    .text.prvTaskExitError  port.o
    0x00001804   0x00001804   0x0000001e   Code   RO          396    .text.prvTimerTask  timers.o
    0x00001822   0x00001822   0x00000002   PAD
    0x00001824   0x00001824   0x000000cc   Code   RO          167    .text.prvUnlockQueue  queue.o
    0x000018f0   0x000018f0   0x00000062   Code   RO           14    .text.psh_btn_init  main.o
    0x00001952   0x00001952   0x00000002   PAD
    0x00001954   0x00001954   0x000000c0   Code   RO          119    .text.pvPortMalloc  heap_1.o
    0x00001a14   0x00001a14   0x0000005e   Code   RO           78    .text.pxPortInitialiseStack  port.o
    0x00001a72   0x00001a72   0x00000002   PAD
    0x00001a74   0x00001a74   0x00000032   Code   RO           18    .text.timer0Init    main.o
    0x00001aa6   0x00001aa6   0x00000002   PAD
    0x00001aa8   0x00001aa8   0x00000048   Code   RO            8    .text.timer0_Delay  main.o
    0x00001af0   0x00001af0   0x00000048   Code   RO           69    .text.uxListRemove  list.o
    0x00001b38   0x00001b38   0x0000000c   Code   RO          276    .text.uxTaskGetNumberOfTasks  tasks.o
    0x00001b44   0x00001b44   0x0000002e   Code   RO           61    .text.vListInitialise  list.o
    0x00001b72   0x00001b72   0x00000002   PAD
    0x00001b74   0x00001b74   0x0000000e   Code   RO           63    .text.vListInitialiseItem  list.o
    0x00001b82   0x00001b82   0x00000002   PAD
    0x00001b84   0x00001b84   0x0000006a   Code   RO           67    .text.vListInsert   list.o
    0x00001bee   0x00001bee   0x00000002   PAD
    0x00001bf0   0x00001bf0   0x00000014   Code   RO           88    .text.vPortEnableVFP  port.o
    0x00001c04   0x00001c04   0x00000056   Code   RO           94    .text.vPortEnterCritical  port.o
    0x00001c5a   0x00001c5a   0x00000002   PAD
    0x00001c5c   0x00001c5c   0x0000004a   Code   RO           96    .text.vPortExitCritical  port.o
    0x00001ca6   0x00001ca6   0x00000002   PAD
    0x00001ca8   0x00001ca8   0x00000024   Code   RO          121    .text.vPortFree     heap_1.o
    0x00001ccc   0x00001ccc   0x00000078   Code   RO           86    .text.vPortSetupTimerInterrupt  port.o
    0x00001d44   0x00001d44   0x00000220   Code   RO          102    .text.vPortSuppressTicksAndSleep  port.o
    0x00001f64   0x00001f64   0x00000064   Code   RO          205    .text.vQueueWaitForMessageRestricted  queue.o
    0x00001fc8   0x00001fc8   0x0000006e   Code   RO          244    .text.vTaskDelay    tasks.o
    0x00002036   0x00002036   0x00000002   PAD
    0x00002038   0x00002038   0x00000024   Code   RO          308    .text.vTaskInternalSetTimeOutState  tasks.o
    0x0000205c   0x0000205c   0x0000000e   Code   RO          312    .text.vTaskMissedYield  tasks.o
    0x0000206a   0x0000206a   0x00000002   PAD
    0x0000206c   0x0000206c   0x00000042   Code   RO          296    .text.vTaskPlaceOnEventList  tasks.o
    0x000020ae   0x000020ae   0x00000002   PAD
    0x000020b0   0x000020b0   0x0000007c   Code   RO          300    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x0000212c   0x0000212c   0x000000b4   Code   RO          264    .text.vTaskStartScheduler  tasks.o
    0x000021e0   0x000021e0   0x000000cc   Code   RO          290    .text.vTaskStepTick  tasks.o
    0x000022ac   0x000022ac   0x00000010   Code   RO          238    .text.vTaskSuspendAll  tasks.o
    0x000022bc   0x000022bc   0x000000be   Code   RO          256    .text.vTaskSwitchContext  tasks.o
    0x0000237a   0x0000237a   0x00000002   PAD
    0x0000237c   0x0000237c   0x00000156   Code   RO           84    .text.xPortStartScheduler  port.o
    0x000024d2   0x000024d2   0x00000002   PAD
    0x000024d4   0x000024d4   0x0000009a   Code   RO          139    .text.xQueueGenericCreate  queue.o
    0x0000256e   0x0000256e   0x00000002   PAD
    0x00002570   0x00002570   0x00000108   Code   RO          137    .text.xQueueGenericReset  queue.o
    0x00002678   0x00002678   0x00000274   Code   RO          153    .text.xQueueGenericSend  queue.o
    0x000028ec   0x000028ec   0x000001dc   Code   RO          173    .text.xQueueReceive  queue.o
    0x00002ac8   0x00002ac8   0x000000fc   Code   RO          310    .text.xTaskCheckForTimeOut  tasks.o
    0x00002bc4   0x00002bc4   0x000000a0   Code   RO          224    .text.xTaskCreate   tasks.o
    0x00002c64   0x00002c64   0x00000038   Code   RO          330    .text.xTaskGetSchedulerState  tasks.o
    0x00002c9c   0x00002c9c   0x00000014   Code   RO          272    .text.xTaskGetTickCount  tasks.o
    0x00002cb0   0x00002cb0   0x00000260   Code   RO          270    .text.xTaskIncrementTick  tasks.o
    0x00002f10   0x00002f10   0x00000138   Code   RO          334    .text.xTaskPriorityDisinherit  tasks.o
    0x00003048   0x00003048   0x00000192   Code   RO          302    .text.xTaskRemoveFromEventList  tasks.o
    0x000031da   0x000031da   0x00000002   PAD
    0x000031dc   0x000031dc   0x00000222   Code   RO          242    .text.xTaskResumeAll  tasks.o
    0x000033fe   0x000033fe   0x00000002   PAD
    0x00003400   0x00003400   0x0000006c   Code   RO          392    .text.xTimerCreateTimerTask  timers.o
    0x0000346c   0x0000346c   0x0000001a   Code   RO          567    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00003486   0x00003486   0x00000011   Data   RO           28    .rodata.str1.1      main.o
    0x00003497   0x00003497   0x00000005   Data   RO          378    .rodata.str1.1      tasks.o
    0x0000349c   0x0000349c   0x00000008   Data   RO          449    .rodata.str1.1      timers.o
    0x000034a4   0x000034a4   0x00000004   Data   RO          363    .rodata.uxTopUsedPriority  tasks.o
    0x000034a8   0x000034a8   0x00000020   Data   RO          642    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x000034c8, Size: 0x00000008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x000034c8   0x00000004   Data   RW           52    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   0x000034cc   0x00000004   Data   RW          108    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000008, Load base: 0x000034d0, Size: 0x000023c8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000008        -       0x00000060   Zero   RW          507    .bss                c_w.l(libspace.o)
    0x20000068        -       0x00000002   Zero   RW           24    .bss.lastDirection  main.o
    0x2000006a   0x000034d0   0x00000002   PAD
    0x2000006c        -       0x00000004   Zero   RW          453    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000070        -       0x00000004   Zero   RW          127    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x20000074        -       0x00000004   Zero   RW          362    .bss.pxCurrentTCB   tasks.o
    0x20000078        -       0x00000004   Zero   RW          451    .bss.pxCurrentTimerList  timers.o
    0x2000007c        -       0x00000004   Zero   RW          373    .bss.pxDelayedTaskList  tasks.o
    0x20000080        -       0x00000004   Zero   RW          374    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000084        -       0x00000004   Zero   RW          452    .bss.pxOverflowTimerList  timers.o
    0x20000088        -       0x00000064   Zero   RW          364    .bss.pxReadyTasksLists  tasks.o
    0x200000ec        -       0x00002000   Zero   RW          128    .bss.ucHeap         heap_1.o
    0x200020ec        -       0x00000001   Zero   RW          106    .bss.ucMaxSysCallPriority  port.o
    0x200020ed   0x000034d0   0x00000003   PAD
    0x200020f0        -       0x00000004   Zero   RW          107    .bss.ulMaxPRIGROUPValue  port.o
    0x200020f4        -       0x00000004   Zero   RW          111    .bss.ulStoppedTimerCompensation  port.o
    0x200020f8        -       0x00000004   Zero   RW          110    .bss.ulTimerCountsForOneTick  port.o
    0x200020fc        -       0x00000004   Zero   RW          369    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002100        -       0x00000004   Zero   RW          368    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002104        -       0x00000004   Zero   RW          371    .bss.uxSchedulerSuspended  tasks.o
    0x20002108        -       0x00000004   Zero   RW          366    .bss.uxTaskNumber   tasks.o
    0x2000210c        -       0x00000004   Zero   RW          365    .bss.uxTopReadyPriority  tasks.o
    0x20002110        -       0x00000014   Zero   RW          454    .bss.xActiveTimerList1  timers.o
    0x20002124        -       0x00000014   Zero   RW          455    .bss.xActiveTimerList2  timers.o
    0x20002138        -       0x00000014   Zero   RW          383    .bss.xDelayedTaskList1  tasks.o
    0x2000214c        -       0x00000014   Zero   RW          384    .bss.xDelayedTaskList2  tasks.o
    0x20002160        -       0x00000004   Zero   RW          379    .bss.xIdleTaskHandle  tasks.o
    0x20002164        -       0x00000004   Zero   RW          109    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x20002168        -       0x00000004   Zero   RW          129    .bss.xNextFreeByte  heap_1.o
    0x2000216c        -       0x00000004   Zero   RW          380    .bss.xNextTaskUnblockTime  tasks.o
    0x20002170        -       0x00000004   Zero   RW          382    .bss.xNumOfOverflows  tasks.o
    0x20002174        -       0x00000004   Zero   RW          381    .bss.xPendedTicks   tasks.o
    0x20002178        -       0x00000014   Zero   RW          377    .bss.xPendingReadyList  tasks.o
    0x2000218c        -       0x00000004   Zero   RW           27    .bss.xQueue         main.o
    0x20002190        -       0x00000004   Zero   RW          370    .bss.xSchedulerRunning  tasks.o
    0x20002194        -       0x00000014   Zero   RW          375    .bss.xSuspendedTaskList  tasks.o
    0x200021a8        -       0x00000014   Zero   RW          367    .bss.xTasksWaitingTermination  tasks.o
    0x200021bc        -       0x00000004   Zero   RW          372    .bss.xTickCount     tasks.o
    0x200021c0        -       0x00000004   Zero   RW          448    .bss.xTimerQueue    timers.o
    0x200021c4        -       0x00000004   Zero   RW          450    .bss.xTimerTaskHandle  timers.o
    0x200021c8        -       0x00000004   Zero   RW          376    .bss.xYieldPending  tasks.o
    0x200021cc   0x000034d0   0x00000004   PAD
    0x200021d0        -       0x00000000   Zero   RW           37    HEAP                startup_tm4c123.o
    0x200021d0        -       0x00000200   Zero   RW           36    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       228          0          0          0       8200       1763   heap_1.o
       238          0          0          0          0       2353   list.o
       686          0         17          0          6       3053   main.o
      1592         16          0          4         17       4970   port.o
      2496          0          0          0          0      17019   queue.o
       276         24        620          0        512       5500   startup_tm4c123.o
       268          0          0          4          0       6817   system_tm4c123.o
      4952          0          9          0        260      27353   tasks.o
      1266         10          8          0         60       9643   timers.o

    ----------------------------------------------------------------------
     12072         62        686          8       9064      78471   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        70         12          0          0          9          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        94          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       754         16          0          0         96       1064   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       718         16          0          0         96        948   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       754         16          0          0         96       1064   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     12826         78        686          8       9160      79047   Grand Totals
     12826         78        686          8       9160      79047   ELF Image Totals
     12826         78        686          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13512 (  13.20kB)
    Total RW  Size (RW Data + ZI Data)              9168 (   8.95kB)
    Total ROM Size (Code + RO Data + RW Data)      13520 (  13.20kB)

==============================================================================

